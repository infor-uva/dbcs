volumes:
  kong_data: {}
  users_data: {}

networks:
  kong-net: {}

services:
  Auth-API:
    image: auth-api-image
    hostname: $${AUTH_SERVICE_HOSTNAME}
    build:
      context: ./java/services/auth
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - 8101:8101
    networks:
      - kong-net
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://$${DB_SERVICE_HOSTNAME}:3306/$${DB_DATABASE_NAME}?createDatabaseIfNotExist=true
    depends_on:
      - RoomsBooking-database

  Users-API:
    image: users-api-image
    hostname: "$${USERS_SERVICE_HOSTNAME}"
    build:
      context: ./java/services/users
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - 8111:8111
    networks:
      - kong-net
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://$${DB_SERVICE_HOSTNAME}:3306/$${DB_DATABASE_NAME}?createDatabaseIfNotExist=true
    depends_on:
      - RoomsBooking-database

  Hotels-API:
    image: hotels-api-image
    hostname: $${HOTELS_SERVICE_HOSTNAME}
    build:
      context: ./java/services/hotels
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - 8121:8121
    networks:
      - kong-net
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://$${DB_SERVICE_HOSTNAME}:3306/$${DB_DATABASE_NAME}?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USER: $${USER_DATABASE}
      SPRING_DATASOURCE_PASSWORD: $${}
    depends_on:
      - RoomsBooking-database
      - Bookings-API

  Bookings-API:
    image: bookings-api-image
    hostname: $${BOOKINGS_SERVICE_HOSTNAME}
    build:
      context: ./java/services/bookings
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - 8131:8131
    networks:
      - kong-net
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://$${DB_SERVICE_HOSTNAME}:3306/$${DB_DATABASE_NAME}?createDatabaseIfNotExist=true
    depends_on:
      - RoomsBooking-database

  RoomsBooking-database:
    image: mysql
    hostname: $${DB_SERVICE_HOSTNAME}
    cap_add:
      - SYS_NICE
    restart: unless-stopped
    ports:
      - "3307:3306"
    networks:
      - kong-net
    volumes:
      - users_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ClaveRoot
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: RoomsBooking
      MYSQL_ROOT_HOST: "%"

  RoomsBooking-Web:
    image: roomsbooking-web-image
    build:
      context: ./angular/RestClient
      dockerfile: ./Dockerfile
    restart: unless-stopped
    ports:
      - 3328:80
    networks:
      - kong-net
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://$${DB_SERVICE_HOSTNAME}:3306/$${DB_DATABASE_NAME}?createDatabaseIfNotExist=true
    depends_on:
      - RoomsBooking-database
